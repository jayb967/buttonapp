{
  "_args": [
    [
      {
        "raw": "pages",
        "scope": null,
        "escapedName": "pages",
        "name": "pages",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/Users/rio/codefellows/301/buttonapp"
    ]
  ],
  "_from": "pages@latest",
  "_id": "pages@0.0.16",
  "_inCache": true,
  "_location": "/pages",
  "_npmUser": {
    "name": "franklovecchio",
    "email": "franklovecchio@gmail.com"
  },
  "_npmVersion": "1.2.32",
  "_phantomChildren": {},
  "_requested": {
    "raw": "pages",
    "scope": null,
    "escapedName": "pages",
    "name": "pages",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/pages/-/pages-0.0.16.tgz",
  "_shasum": "d1ce34b2d7d4b613127a83be787c1933bb99c27c",
  "_shrinkwrap": null,
  "_spec": "pages",
  "_where": "/Users/rio/codefellows/301/buttonapp",
  "author": {
    "name": "Frank LoVecchio",
    "email": "frank@2lemetry.com"
  },
  "bin": {
    "pages": "./cli/exec"
  },
  "bugs": {
    "url": "https://github.com/m2mIO/pages/issues"
  },
  "dependencies": {
    "async": "0.2.8",
    "bower": "0.9.2",
    "coffee-script": "1.6.3",
    "commander": "1.1.1",
    "connect": "2.7.10",
    "ejs": "0.8.4",
    "express": "3.2.5",
    "fs-extra": "0.6.0",
    "gaze": "git+https://github.com/brett-shwom/gaze.git",
    "jade": "0.30.0",
    "mocha": "1.9.0",
    "node-minify": "0.7.5",
    "node-uuid": "1.4.0",
    "readdirp": "0.3.1",
    "should": "1.2.2"
  },
  "description": "AngularJS / Node.js sidekick.",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "shasum": "d1ce34b2d7d4b613127a83be787c1933bb99c27c",
    "tarball": "https://registry.npmjs.org/pages/-/pages-0.0.16.tgz"
  },
  "engines": {
    "node": "0.10.x",
    "npm": "1.2.x"
  },
  "homepage": "https://github.com/m2mIO/pages#readme",
  "keywords": [
    "angular",
    "2lemetry"
  ],
  "maintainers": [
    {
      "name": "franklovecchio",
      "email": "franklovecchio@gmail.com"
    }
  ],
  "name": "pages",
  "optionalDependencies": {},
  "readme": "_todo_ Private assets based on username/password.\n\n# pages #\n\nAn unofficial sidekick for AngularJS / (and optionally) Node.js applications. _It's a developer's framework for building applications, abstracting its dependencies, and reusing custom components more efficiently._\n\n<img src=\"http://www.endlessicons.com/wp-content/uploads/2012/09/paper-icon-614x460.png\" />\n\n**Warning: This is betaware.**\n\n## Why? ##\n\n[Yeoman](https://github.com/yeoman/generator-angular) is great at what it does, but Pages _centralizes_ dependencies even further for AngularJS applications, and architects them _better_ for the large-scale (while still allowing application-specific customization). _Ideally_, this will become a Yeoman integration (now that it is at 1.0 RC1) :)\n\n## Pre-reqs ##\n\nJust make it so.\n\n1. [OSX](http://apple.com)\n1. [Node.js](http://nodejs.org), version 0.10.12.\n1. [Ruby](http://ruby-lang.org) For [Terminal Notifier](https://github.com/alloy/terminal-notifier)\n1. [Java](http://java-lang.org) For [node-minify](https://github.com/srod/node-minify)\n1. [Terminal Notifier](https://github.com/alloy/terminal-notifier)\n1. `curl`, `wget`, and `unzip`\n\n## Install ##\n\n```\nsudo npm install -g pages\n```\n\n_Note:_ Pages doesn't require any dependency _but itself_ to be installed globally.\n\n## Usage (simple) ##\n\n**What can you do with Pages?**\n\n```\npages help \n```\n\n**Create a Pages application:**\n\n```\npages generate --type=app --name=\"My Pages App\"\ncd my-pages-app\nnpm install # (only if you're using Node.js components)\n```\n\nThis generates a non-compiled application from a default or configured skeleton.\n\n_Note:_ The `name` option is sanitized to `my-pages-app`.\n\n**Compile/watch/run a Pages application for `development`:**\n\n```\ncd my-pages-app\npages run --port=3000 --browser=chrome\n```\n\nThis runs the Pages application compiler on port `3000`, watching for changes to CoffeeScripts, Jade templates, and dependencies; Google Chrome's first browser tab is automatically refreshed after bundling (compiling/downloading assets).\n\n_Note:_  By default (not specifying the option), Pages runs applications on port `80`. If you do not have access to port `80`, it will hang.\n\n**Compile/concat/minify/run a Pages application for `production`:**\n\n```\ncd my-pages-app\npages start --port=3000 --browser=chrome\n```\n\n_Note:_ The same default port assignments apply from the CLI command `pages run`, but a specified browser will refresh just _once_ after the build is done.\n\n\n**Bake it for `production`, then run it with Foreman (Heroku):**\n\n```\ncd my-pages-app\nnpm install\npages bake --env=production\nforeman start\n```\n\n_See the wiki for more!_\n\n----\n\nCopyright Â© 2013 2lemetry, LLC\n\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\nRedistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/m2mIO/pages.git"
  },
  "version": "0.0.16",
  "warnings": [
    {
      "code": "ENOTSUP",
      "required": {
        "node": "0.10.x",
        "npm": "1.2.x"
      },
      "pkgid": "pages@0.0.16"
    },
    {
      "code": "ENOTSUP",
      "required": {
        "node": "0.10.x",
        "npm": "1.2.x"
      },
      "pkgid": "pages@0.0.16"
    }
  ]
}
